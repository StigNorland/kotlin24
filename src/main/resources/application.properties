# #blog.title=Blog
# #blog.banner.title=Warning
# #blog.banner.content=The blog will be down tomorrow.

# # Properties will be included in logs
# spring.application.name=qddt-service
# #spring.application.version=${QDDT_YEAR:2.0.rc1}

# spring.datasource.hikari.connectionTimeout=20000
# spring.datasource.hikari.maximumPoolSize=5

# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${QDDT_DB_NAME:qddt-dev}
# spring.datasource.username= ${QDDT_DB_USER:qddt}
# spring.datasource.password= ${QDDT_DB_PASSWORD_PSQL:qddt}

# spring.jpa.hibernate.ddl-auto=validate

# spring.jmx.enabled=false
# spring.data.rest.base-path=/api
# server.http2.enabled=true


# server.port=  ${QDDT_PORT:5001}
# server.forward-headers-strategy=framework
# server.compression.enabled=true
# server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/hal+json,application/hal
# # The comma-separated list of mime types that should be compressed
# server.compression.min-response-size=1024

# #api.origin=*

# # JWT Auth
# auth.secret=some-random-secret
# auth.expires=86400
# auth.header=Authorization


# #management.endpoints.web.base-path=/
# #management.endpoints.web.exposure.include=health,prometheus
# #management.endpoints.web.path-mapping.health=health
# #management.endpoints.web.path-mapping.prometheus=metrics
# #management.endpoints.web.cors.allowed-headers=Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers

# # management.endpoints.web.exposure.include= metrics,health,info,prometheus
# # management.endpoint.metrics.enabled=true
# # management.endpoint.prometheus.enabled=true
# # management.metrics.export.prometheus.enabled=true

# # Set fluent-host to enable the fluent appender
# logging.fluent-host=${FLUENT_HOST:localhost}

# spring.profiles.active =${QDDT_ENV:local}
